<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAAAAABoBQAAJgAAABAQAAAAAAAAaAQAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAEAB
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAF0lIABhKiUAZjAtAGsyLwBuNjMAcjs5AHk/PQB6QRsAPDhPADs5
        UwA+OlIAPjtUAD89VQA/P1kAQUBZAENCXABFRV8AZ0FBAGhITwB6RUUARkdiAERIZABLTWgATVBrAE5R
        bgBcVGkAUFVxAFRadwBUXXoAV199AHhxfQCCRRoAik0eAJRXIgCdWyEAjVs6AKJfIgCrZyQAsWwmALZv
        JwC3cCcAxXwqAMl+KwDJfywAgUZGAIZOUACEVlUAjFRXAI5XWACRVlcAkFhbAI5vdgCOcnIApGhqAKZr
        bgCkeXsAz4UtANCELADUhy0A1Y8+ANyQMwDklTEA6ZkyAPGgNAC3h1sAuYpdAL2OXgCbgmkAtYhkAP2w
        QwDvrlMAzZpoANOmZwDVqXUA3rZ6APzCZgAxO6UAMzyrAD9RowA3Q7QAOEa3ADpKuwA6TLoAWmOBAGlt
        hQBkcI0AfnKBAGNwkABSWaUAWWO2AFVosgBmbr0AcHi+AD1QwgBBWMsAQVnNAENc0QBHZNkAaHLDAGl2
        xgByd8UASmvgAFJt4QB/h58AfImfAHeGoQB3iK0AeI6vAHuXugB+hMMAdYzCAIuJkQCEh5kAvoOIALKW
        lgCym5oAsqqYAI6WqwCSlaUAjqG4AJ6hsACVo70An6q+AMuNkgDFpIUAl5jAAJKe2QCHpcQAiaHAAIqo
        xACOrscAhqfKAJWpxACGrNEAjLHRAI+00gCTt9QAmbrUAJ6j5QCfqe0Anc/2AJ/R9gCozuQAqNf2AKra
        9wCs2/cArdz3ALLg9wC04fcAueLyALnl+AC85/gAvuj4AOPW1ADn3twA1NPwAPX1+gD9+voAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
</value>
  </data>
</root>